name: Test Home Manager Configurations

on:
  push:
    branches:
      - main
    paths:
      - 'home-manager/**'
      - 'nix-darwin/**'
      - 'flake.nix'
      - 'flake.lock'
  pull_request:
    branches:
      - main
    paths:
      - 'home-manager/**'
      - 'nix-darwin/**'
      - 'flake.nix'
      - 'flake.lock'
  workflow_dispatch:

jobs:
  test-configs:
    name: Test ${{ matrix.config }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - config: macbook-pro-m3
            os: macos-26
            platform: darwin
            type: home-manager
          - config: nixos-orbstack
            os: ubuntu-24.04-arm
            platform: linux
            type: home-manager

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/determinate-nix-action@v3

      - name: Check Flake
        run: |
          echo "Evaluating Flake"
          nix flake check

      - name: Check for common issues
        run: |
          echo "Checking for common configuration issues..."

          # Check if all imported files exist
          echo "Checking Nix syntax..."
          if ! find home-manager -name "*.nix" -exec nix-instantiate --parse {} \; > /dev/null; then
            echo "❌ Syntax errors found in home-manager nix files"
            exit 1
          fi

          if ! find nix-darwin -name "*.nix" -exec nix-instantiate --parse {} \; > /dev/null; then
            echo "❌ Syntax errors found in nix-darwin nix files"
            exit 1
          fi

          # Test flake.nix syntax without full evaluation
          echo "Checking flake.nix syntax..."
          if ! nix-instantiate --parse flake.nix > /dev/null; then
            echo "❌ Syntax errors found in flake.nix"
            exit 1
          fi

          echo "✅ Basic syntax checks passed"

      - name: Generate build artifacts info
        if: always()
        run: |
          echo "## Configuration Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Configuration**: ${{ matrix.config }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Type**: ${{ matrix.type }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Platform**: ${{ matrix.platform }}" >> $GITHUB_STEP_SUMMARY
          echo "- **OS**: ${{ matrix.os }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ job.status }}" == "success" ]]; then
            echo "✅ Configuration builds successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Configuration failed to build" >> $GITHUB_STEP_SUMMARY
          fi

  test-matrix-summary:
    name: Test Results Summary
    runs-on: ubuntu-latest
    needs: test-configs
    if: always()

    steps:
      - name: Generate summary
        run: |
          echo "## Home Manager Configuration Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.test-configs.result }}" == "success" ]]; then
            echo "🎉 **All Home Manager configurations passed!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "All Home Manager configurations build successfully and are ready for deployment." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "📝 **Note**: nix-darwin configurations are not tested in CI as they require actual macOS system setup." >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Some configurations failed**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Check the individual job results above for details." >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Tested Configurations:" >> $GITHUB_STEP_SUMMARY
          echo "- **Home Manager**: macbook-pro-m3 (macOS), nixos-orbstack (Linux)" >> $GITHUB_STEP_SUMMARY
          echo "- **nix-darwin**: Not tested in CI (requires actual macOS system)" >> $GITHUB_STEP_SUMMARY
